// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste_Empresarial.Models;

namespace Teste_Empresarial.Migrations
{
    [DbContext(typeof(Teste_EmpresarialContext))]
    partial class Teste_EmpresarialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste_Empresarial.Models.CadastroDeContainer", b =>
                {
                    b.Property<int>("ContainerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("ContainerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("ContainerID");

                    b.ToTable("CadastroDeContainers");
                });

            modelBuilder.Entity("Teste_Empresarial.Models.MovimentacaoDeContainer", b =>
                {
                    b.Property<int>("MovementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CadastroDeContainerContainerID");

                    b.Property<string>("ContainerNumber")
                        .IsRequired();

                    b.Property<DateTime>("FinalDate");

                    b.Property<DateTime>("InitialDate");

                    b.Property<int>("TypeOfMovement");

                    b.HasKey("MovementID");

                    b.HasIndex("CadastroDeContainerContainerID");

                    b.ToTable("MovimentacaoDeContainers");
                });

            modelBuilder.Entity("Teste_Empresarial.Models.MovimentacaoDeContainer", b =>
                {
                    b.HasOne("Teste_Empresarial.Models.CadastroDeContainer", "CadastroDeContainer")
                        .WithMany("movimentacaoDeContainers")
                        .HasForeignKey("CadastroDeContainerContainerID");
                });
#pragma warning restore 612, 618
        }
    }
}
